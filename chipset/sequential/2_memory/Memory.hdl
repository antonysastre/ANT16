/**
 * The complete address space of the Ant16 computer's memory,
 * including RAM and memory-mapped I/O.

 * The chip facilitates read and write operations, as follows:
 *  Read: out(t) = Memory[address(t)](t)
 *  Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)

 * The chip outputs the value stored at the memory location specified by address. 
 * If 'load=1', the 'in' value is loaded into the memory location specified by address. 
 * This value becomes available through the 'out' from the next counter step onward.

 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address > 0x6000 is invalid and reads 0. 
 * Access to address in the range 0x4000-0x5FFF accesses the screen memory.
 * Access to address 0x6000 accesses the keyboard memory.
 * The behavior of the Screen and Keyboard chip are given in README.
 *
 */

CHIP Memory {
  IN in[16], load, address[15];
  OUT out[16];

  PARTS:
	DMux4Way(in=load,sel=address[13..14],a=ram,b=rram,c=scrn,d=keybd);

	Or(a=ram,b=rram,out=rr);
	RAM16K(in=in,load=rr,address=address[0..13],out=r);
	
	Screen(in=in,load=scrn,address=address[0..12],out=sc);
	
	Keyboard(out=k);

	Mux4Way16(a=r,b=r,c=sc,d=k,sel=address[13..14],out=out);
}